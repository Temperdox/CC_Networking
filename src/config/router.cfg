-- /config/router.cfg
-- Router configuration file for ComputerCraft router system

local config = {}

-- Basic router information
config.router_id = os.getComputerID()
config.hostname = os.getComputerLabel() or ("router-" .. os.getComputerID())
config.domain = "local"
config.admin_password = "admin"

-- WAN (Wide Area Network) configuration
config.wan = {
    enabled = true,
    interface = "wan0",
    type = "dhcp",  -- "dhcp", "static", "pppoe"

    -- Static configuration (if type = "static")
    static = {
        ip = "192.168.1.100",
        netmask = "255.255.255.0",
        gateway = "192.168.1.1",
        dns = {"8.8.8.8", "8.8.4.4"}
    },

    -- PPPoE configuration (if type = "pppoe")
    pppoe = {
        username = "",
        password = "",
        service = "",
        ac_name = ""
    },

    -- DHCP client configuration (if type = "dhcp")
    dhcp_client = {
        hostname = config.hostname,
        client_id = "",
        lease_time = 86400
    }
}

-- LAN (Local Area Network) configuration
config.lan = {
    enabled = true,
    interface = "lan0",
    ip = "10.0.0.1",
    netmask = "255.255.0.0",
    mac = string.format("CC:AF:00:01:%02X:%02X",
        math.floor(os.getComputerID() / 256),
        os.getComputerID() % 256),

    -- DHCP server configuration
    dhcp = {
        enabled = true,
        start_ip = "10.0.0.10",
        end_ip = "10.0.0.200",
        lease_time = 86400,  -- 24 hours in seconds
        dns_servers = {"10.0.0.1", "8.8.8.8"},
        domain_name = "local",
        gateway = "10.0.0.1",
        netmask = "255.255.0.0",

        -- Static DHCP leases
        static_leases = {
            -- ["CC:AF:00:02:00:01"] = {ip = "10.0.0.50", hostname = "server1"},
            -- ["CC:AF:00:02:00:02"] = {ip = "10.0.0.51", hostname = "server2"}
        }
    }
}

-- Wireless configuration (if wireless modem available)
config.wireless = {
    enabled = true,
    interface = "wlan0",
    mode = "ap",  -- "ap" (access point) or "client"

    -- Access Point mode
    ap = {
        ssid = config.hostname .. "_WiFi",
        channel = 6,
        encryption = "wpa2",
        password = "router123",
        hidden = false,
        max_clients = 20,
        isolation = false
    },

    -- Client mode
    client = {
        ssid = "",
        password = "",
        auto_connect = true
    }
}

-- Firewall configuration
config.firewall = {
    enabled = true,
    default_policy = "drop",  -- "accept" or "drop"

    -- Firewall rules (processed in order)
    rules = {
        -- Allow loopback
        {action = "accept", source = "127.0.0.0/8", destination = "127.0.0.0/8"},

        -- Allow established and related connections
        {action = "accept", state = "established,related"},

        -- Allow LAN to LAN communication
        {action = "accept", source = "10.0.0.0/16", destination = "10.0.0.0/16"},

        -- Allow LAN to WAN (internet access)
        {action = "accept", source = "10.0.0.0/16", destination = "0.0.0.0/0", direction = "forward"},

        -- Allow specific services from WAN
        {action = "accept", destination_port = 22, protocol = "tcp", comment = "SSH"},
        {action = "accept", destination_port = 80, protocol = "tcp", comment = "HTTP"},
        {action = "accept", destination_port = 443, protocol = "tcp", comment = "HTTPS"},

        -- Allow DHCP
        {action = "accept", source_port = 67, destination_port = 68, protocol = "udp"},
        {action = "accept", source_port = 68, destination_port = 67, protocol = "udp"},

        -- Allow DNS
        {action = "accept", destination_port = 53, protocol = "udp"},
        {action = "accept", destination_port = 53, protocol = "tcp"},

        -- Drop everything else
        {action = "drop"}
    }
}

-- NAT (Network Address Translation) configuration
config.nat = {
    enabled = true,
    wan_interface = "wan0",
    lan_interfaces = {"lan0", "wlan0"},

    -- Port forwarding rules
    port_forward = {
        -- {external_port = 8080, internal_ip = "10.0.0.50", internal_port = 80, protocol = "tcp", comment = "Web server"},
        -- {external_port = 2222, internal_ip = "10.0.0.51", internal_port = 22, protocol = "tcp", comment = "SSH server"}
    },

    -- DMZ (Demilitarized Zone)
    dmz = {
        enabled = false,
        host = ""
    }
}

-- QoS (Quality of Service) configuration
config.qos = {
    enabled = false,
    wan_bandwidth = 10000,  -- kbps
    lan_bandwidth = 100000, -- kbps

    -- Traffic shaping rules
    rules = {
        {name = "VoIP", priority = "high", ports = "5060,5061", protocol = "udp", bandwidth = "20%"},
        {name = "Gaming", priority = "high", ports = "3478-3480", protocol = "udp", bandwidth = "15%"},
        {name = "Web", priority = "normal", ports = "80,443", protocol = "tcp", bandwidth = "40%"},
        {name = "Bulk", priority = "low", ports = "21,20", protocol = "tcp", bandwidth = "25%"}
    }
}

-- VPN configuration
config.vpn = {
    enabled = false,
    type = "openvpn",  -- "openvpn", "wireguard", "ipsec"

    openvpn = {
        config_file = "/etc/openvpn/client.conf",
        auto_start = false
    },

    wireguard = {
        interface = "wg0",
        private_key = "",
        public_key = "",
        endpoint = "",
        allowed_ips = "0.0.0.0/0"
    }
}

-- Services configuration
config.services = {
    web_admin = {
        enabled = true,
        port = 8080,
        interface = "10.0.0.1",
        ssl = false,
        ssl_cert = "/etc/ssl/router.crt",
        ssl_key = "/etc/ssl/router.key"
    },

    ssh = {
        enabled = false,
        port = 22,
        interface = "0.0.0.0",
        allow_root = false,
        password_auth = true,
        key_auth = true
    },

    snmp = {
        enabled = false,
        port = 161,
        community = "public",
        location = "ComputerCraft Router",
        contact = "admin@router.local"
    },

    ntp = {
        enabled = false,
        servers = {"pool.ntp.org", "time.cloudflare.com"}
    }
}

-- Logging configuration
config.logging = {
    enabled = true,
    level = "info",  -- debug, info, warn, error
    facilities = {
        system = "/var/log/router.log",
        firewall = "/var/log/firewall.log",
        dhcp = "/var/log/dhcp.log",
        wireless = "/var/log/wireless.log"
    },
    max_size = 10000,  -- Maximum log entries per file
    remote_logging = {
        enabled = false,
        server = "",
        port = 514
    }
}

-- System configuration
config.system = {
    timezone = "UTC",
    ntp_sync = true,
    watchdog = {
        enabled = true,
        interval = 60,  -- seconds
        actions = {"restart_services", "reboot"}
    },

    -- System resources
    resources = {
        max_memory = 1024,  -- MB
        max_cpu = 80,       -- percentage
        max_connections = 1000
    },

    -- Backup configuration
    backup = {
        enabled = true,
        interval = 86400,  -- daily backup
        location = "/var/backups/",
        keep_backups = 7
    }
}

-- Advanced features
config.advanced = {
    -- Load balancing
    load_balancing = {
        enabled = false,
        wan_interfaces = {"wan0", "wan1"},
        method = "round_robin"  -- "round_robin", "weighted", "failover"
    },

    -- VLAN support
    vlans = {
        enabled = false,
        vlans = {
            -- {id = 10, name = "guest", interface = "lan0", ip = "192.168.10.1", netmask = "255.255.255.0"},
            -- {id = 20, name = "iot", interface = "lan0", ip = "192.168.20.1", netmask = "255.255.255.0"}
        }
    },

    -- Dynamic DNS
    ddns = {
        enabled = false,
        provider = "dyndns",
        username = "",
        password = "",
        hostname = ""
    }
}

return config
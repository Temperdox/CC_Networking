-- /etc/wifi.cfg
-- WiFi configuration file for ComputerCraft wireless networking

local config = {}

-- Basic WiFi information
config.device_id = os.getComputerID()
config.hostname = os.getComputerLabel() or ("wifi-" .. os.getComputerID())
config.mac_address = string.format("CC:WF:%02X:%02X:%02X:%02X",
    math.floor(config.device_id / 16777216) % 256,
    math.floor(config.device_id / 65536) % 256,
    math.floor(config.device_id / 256) % 256,
    config.device_id % 256)

-- Interface configuration
config.interface = {
    name = "wlan0",
    type = "wireless",
    enabled = true,
    auto_start = true,
    power_management = false,
    channel_scan = true
}

-- Operation mode
config.mode = "client"  -- "client", "ap", "adhoc", "monitor"

-- Client mode configuration
config.client = {
    -- Network profiles (multiple networks supported)
    networks = {
        {
            ssid = "HomeNetwork",
            password = "your_password_here",
            security = "wpa2",  -- "open", "wep", "wpa", "wpa2", "wpa3"
            priority = 1,
            auto_connect = true,
            hidden = false,
            bssid = "",  -- Optional: specific access point MAC

            -- Advanced settings
            key_mgmt = "WPA-PSK",
            pairwise = "CCMP",
            group = "CCMP",
            proto = "RSN"
        },

        {
            ssid = "GuestNetwork",
            password = "",
            security = "open",
            priority = 2,
            auto_connect = false,
            hidden = false
        },

        {
            ssid = "WorkNetwork",
            password = "work_password",
            security = "wpa2",
            priority = 3,
            auto_connect = true,
            hidden = false,

            -- Enterprise settings
            eap = "PEAP",
            identity = "username",
            anonymous_identity = "anonymous",
            ca_cert = "/etc/ssl/ca.crt"
        }
    },

    -- Client behavior
    scan_interval = 60,      -- seconds between scans
    roam_threshold = -70,    -- dBm signal threshold for roaming
    retry_attempts = 5,
    connect_timeout = 30,
    dhcp_timeout = 60,

    -- Power saving
    power_save = false,
    sleep_delay = 100
}

-- Access Point mode configuration
config.access_point = {
    ssid = config.hostname .. "_AP",
    password = "computercraft",
    security = "wpa2",
    channel = 6,
    channel_width = "20MHz",  -- "20MHz", "40MHz", "80MHz"
    beacon_interval = 100,
    dtim_period = 2,
    hidden = false,

    -- Network settings
    ip_address = "192.168.4.1",
    netmask = "255.255.255.0",
    dhcp_range_start = "192.168.4.10",
    dhcp_range_end = "192.168.4.50",
    dhcp_lease_time = 86400,

    -- Access control
    max_clients = 10,
    client_isolation = false,
    mac_filter = {
        enabled = false,
        policy = "allow",  -- "allow" or "deny"
        addresses = {
            -- "CC:AF:01:02:03:04",
            -- "CC:AF:01:02:03:05"
        }
    },

    -- Advanced AP settings
    wmm_enabled = true,
    uapsd_enabled = true,
    country_code = "US",
    ieee80211n = true,
    ieee80211ac = false,
    short_preamble = true
}

-- Ad-hoc mode configuration
config.adhoc = {
    ssid = "CC_Mesh_" .. config.device_id,
    channel = 6,
    cell_id = string.format("%02X:%02X:%02X:%02X:%02X:%02X",
        0xCC, 0xAD, 0x00, 0x00,
        math.floor(config.device_id / 256),
        config.device_id % 256),

    ip_address = string.format("169.254.%d.%d",
        math.floor(config.device_id / 254) % 256,
        (config.device_id % 254) + 1),
    netmask = "255.255.0.0"
}

-- Monitor mode configuration
config.monitor = {
    channel = 6,
    channel_hopping = false,
    hop_interval = 1000,  -- milliseconds
    capture_filter = "",
    capture_file = "/tmp/capture.pcap"
}

-- Security settings
config.security = {
    -- WPS settings
    wps = {
        enabled = false,
        pin = "12345670",
        push_button = true,
        timeout = 120
    },

    -- Encryption settings
    encryption = {
        default_type = "wpa2",
        wep_keys = {
            key1 = "",
            key2 = "",
            key3 = "",
            key4 = ""
        },
        wpa_passphrase_min_length = 8
    },

    -- Certificate management
    certificates = {
        ca_cert_path = "/etc/ssl/certs/",
        client_cert_path = "/etc/ssl/private/",
        verify_server_cert = true
    }
}

-- Quality of Service
config.qos = {
    enabled = false,

    -- Traffic prioritization
    priorities = {
        voice = {enabled = true, weight = 7},
        video = {enabled = true, weight = 5},
        best_effort = {enabled = true, weight = 3},
        background = {enabled = true, weight = 1}
    },

    -- Bandwidth limits
    bandwidth = {
        upstream = 0,    -- 0 = unlimited, otherwise kbps
        downstream = 0
    }
}

-- Mesh networking
config.mesh = {
    enabled = false,
    protocol = "olsr",  -- "olsr", "batman", "babel"
    mesh_id = "cc_mesh",

    -- OLSR settings
    olsr = {
        hello_interval = 2.0,
        tc_interval = 5.0,
        mid_interval = 5.0,
        hna_interval = 5.0
    },

    -- B.A.T.M.A.N. settings
    batman = {
        gateway_mode = "client",
        hop_penalty = 30,
        originator_interval = 1000
    }
}

-- Logging and monitoring
config.logging = {
    enabled = true,
    level = "info",  -- "debug", "info", "warn", "error"
    file = "/var/log/wifi.log",
    max_size = 5000,

    -- What to log
    events = {
        connection = true,
        disconnection = true,
        roaming = true,
        authentication = true,
        errors = true,
        signal_strength = false
    }
}

-- Statistics and monitoring
config.monitoring = {
    enabled = true,

    -- Signal monitoring
    signal = {
        update_interval = 5,  -- seconds
        rssi_threshold = -80, -- dBm
        snr_threshold = 10    -- dB
    },

    -- Traffic monitoring
    traffic = {
        update_interval = 10,
        reset_daily = true
    },

    -- Statistics collection
    stats = {
        file = "/var/run/wifi_stats",
        update_interval = 30
    }
}

-- Advanced settings
config.advanced = {
    -- Radio settings
    radio = {
        tx_power = "auto",  -- "auto" or value in dBm
        antenna_gain = 0,   -- dBi
        diversity = "auto",
        rts_threshold = 2347,
        fragmentation_threshold = 2346,
        retry_short = 7,
        retry_long = 4
    },

    -- Driver settings
    driver = {
        name = "cc_wireless",
        options = {
            debug_level = 0,
            led_mode = 1,
            power_save_mode = 0
        }
    },

    -- Experimental features
    experimental = {
        fast_transition = false,
        pmf_required = false,
        ocv = false
    }
}

-- Regional settings
config.regulatory = {
    country_code = "US",
    indoor_operation = true,
    dfs_required = false,

    -- Frequency bands (MHz)
    bands = {
        ["2.4GHz"] = {
            enabled = true,
            channels = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11},
            max_power = 20  -- dBm
        },
        ["5GHz"] = {
            enabled = false,
            channels = {36, 40, 44, 48, 149, 153, 157, 161, 165},
            max_power = 23  -- dBm
        }
    }
}

return config